{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Design","useState","toggle","setToggle","toggle2","setToggle2","toggle3","setToggle3","count","setCount","increment","e","target","name","Box","sx","flexGrow","AppBar","position","Toolbar","Typography","variant","component","IconButton","size","edge","color","aria-label","mr","id","className","Grid","container","spacing","backgroundColor","lg","display","justifyContent","item","xs","Card","maxWidth","borderRadius","CardActionArea","CardContent","gutterBottom","fontSize","List","ListItem","ListItemText","primary","CardActions","Button","onClick","fullWidth","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2674d52.chunk.js","sourcesContent":["import  React, {useState} from 'react';\nimport './App.css';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { Badge, Button, CardActionArea, CardActions,inputClasses,MenuIcon } from '@mui/material';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { makeStyles } from '@mui/styles';\nimport {IconButton} from '@mui/material';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\n\n\nexport default function Design()\n {\n  const [toggle, setToggle] = useState(false);\n  const [toggle2, setToggle2] = useState(false);\n  const [toggle3, setToggle3] = useState(false);\n  const [count, setCount] = useState(0);\n  \n  var increment=(e)=>{\n    if(e.target.name === 'btn1')\n    {\n      setToggle(!toggle)\n      if(!toggle===true)\n      {\n          setCount(count + 1);\n      }\n      else{\n          setCount(count - 1);\n      }\n    }\n\n    if(e.target.name === 'btn2')\n    {\n      setToggle2(!toggle2)\n      if(!toggle2===true)\n      {\n          setCount(count + 1);\n      }\n      else{\n          setCount(count - 1);\n      }\n    }\n\n    if(e.target.name === 'btn3')\n    {\n      setToggle3(!toggle3)\n      if(!toggle3===true)\n      {\n          setCount(count + 1);\n      }\n      else{\n          setCount(count - 1);\n      }\n    }\n  }\n return (\n   \n    <>\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n      <Toolbar>\n      <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n        ONLINE STORE\n      </Typography>\n   <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n      >\n      \n      <ShoppingCartIcon/>\n      \n      <span id=\"cnt\" className=\"cartcount\">{count}</span> \n     \n      </IconButton>\n      {/* <Badge badgeContent={4} color=\"secondary\" overlap=\"circular\" sx={{position:\"absolute\",right:\"70px\",top:\"20px\"}}>\n      <ShoppingCartIcon/>\n      </Badge> */}\n        </Toolbar>\n      </AppBar>\n    </Box>\n    \n    \n    <Grid  container spacing={1} sx={{backgroundColor:\"#90caf9\"}} lg={{backgroundColor:\"orange\"}} display={'flex'} justifyContent={'center'}  >\n    \n    \n    <Grid  item xs={12} lg={3.5} display={'flex'} justifyContent={'space-around'}>\n    <Card sx={{ maxWidth: 345 }} className=\"cardcomp\" sx={{ maxWidth: 350 },{ borderRadius: 6 }} >\n      <CardActionArea>\n       \n        <CardContent>\n          <Typography gutterBottom variant=\"h2\" fontSize={40} component=\"div\">\n          $0/month\n          </Typography><hr/>\n          <List>\n          <ListItem >\n            <ListItemText primary=\"✓ Single User\" />\n          </ListItem>\n          \n          <ListItem >\n            <ListItemText primary=\"✓ 5GB Storage\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Unlimited Public Projects\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓Community Access\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Unlimited Private Projects\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Community Access\" />\n          </ListItem>\n          <ListItem >\n            \n          <ListItemText primary=\"X Dedicated Phone Support\" />\n          </ListItem>\n          </List>\n       \n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n      \n     \n      <Button name=\"btn1\"  onClick={increment} variant=\"contained\" fullWidth={10} style={{backgroundColor:'black',borderRadius: 16}}>{toggle ? 'remove from cart':'add to cart'}\n     \n      </Button>\n      \n      </CardActions>\n    </Card>\n    </Grid>\n    <Grid item xs={12} lg={3.5} display={'flex'} justifyContent={'space-around'}>\n    <Card className=\"cardcomp\" sx={{ maxWidth: 350 },{ borderRadius: 6 }} >\n      <CardActionArea>\n       \n        <CardContent>\n          <Typography gutterBottom variant=\"h2\" fontSize={40} component=\"div\">\n          $9/month\n          </Typography><hr/>\n          <List>\n          <ListItem >\n            <ListItemText primary=\"✓ 5 Users\" />\n          </ListItem>\n          \n          <ListItem >\n            <ListItemText primary=\"✓ 50GB Storage\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Unlimited Public Projects\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Community Access\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Unlimited Private Projects\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Community Access\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Free Subdomain\" />\n          </ListItem>\n          </List>\n         \n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n      <Button name=\"btn2\"  onClick={increment} variant=\"contained\" fullWidth={10} style={{backgroundColor:'black',borderRadius: 16}}>{toggle2 ? 'remove from cart':'add to cart'}</Button>\n      </CardActions>\n    </Card>\n    </Grid>\n    \n    <Grid item xs={12} lg={3.5} display={'flex'} justifyContent={'space-around'}>\n    \n    <Card className=\"cardcomp\" sx={{ maxWidth: 345 },{ borderRadius: 6 }}>\n      <CardActionArea>\n      \n        <CardContent>\n          <Typography gutterBottom variant=\"h2\" fontSize={40} component=\"div\">\n          $49/month\n          </Typography><hr/>\n         <List>\n          <ListItem >\n            <ListItemText  primary=\"✓ Unlimited Users\" />\n          </ListItem>\n          \n          <ListItem >\n            <ListItemText primary=\"✓ 150GB Storage\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Unlimited Public Projects\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Community Access\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"✓ Community Access\" />\n          </ListItem>\n          <ListItem >\n\n          <ListItemText primary=\"X Unlimited Private Projects\" />\n          </ListItem>\n          <ListItem >\n            \n          <ListItemText primary=\"X Dedicated Phone Support\" />\n          </ListItem>\n          </List>\n          \n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n      <Button name=\"btn3\"  onClick={increment} variant=\"contained\" fullWidth={10} style={{backgroundColor:'black',borderRadius: 16}}>{toggle3 ? 'remove from cart':'add to cart'}</Button>\n      </CardActions>\n    </Card>\n    </Grid>\n    \n  </Grid>\n  \n  </>\n\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}